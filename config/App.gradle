configSigning()

android {
    compileSdkVersion AndroidConfigVersion.compileSdkVersion
    buildToolsVersion AndroidConfigVersion.buildToolsVersion
    defaultConfig {
        applicationId AndroidConfigVersion.appId
        minSdkVersion AndroidConfigVersion.minSdkVersion
        targetSdkVersion AndroidConfigVersion.targetSdkVersion
        versionCode AndroidConfigVersion.versionCode
        versionName AndroidConfigVersion.versionName
        consumerProguardFiles 'proguard-rules.pro'

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationIdSuffix ".debug"
        }
        release {
            shrinkResources true
            minifyEnabled true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/*'
    }

    dexOptions {
        preDexLibraries true
        preDexLibraries true
        javaMaxHeapSize "8g"
        maxProcessCount 8
        dexInProcess = true
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    splits {
        abi {
            enable true
            reset()
            include 'armeabi'
        }
    }

    if (ktx) {
        kotlinOptions {
            jvmTarget = JavaVersion.VERSION_1_8
        }
    }
}

def configSigning() {

    File signPropertiesFile = file("${rootDir.path}/apk-signature/keystore.properties")
    if (!signPropertiesFile.exists()) return

    //GLog.d("${project.toString()} sign start...")
    project.android {
        Properties properties = new Properties()
        properties.load(new FileInputStream(signPropertiesFile))
        signingConfigs {
            release {
                storeFile new File(signPropertiesFile.getParent(), properties['key.file'])
                storePassword properties['store.password']
                keyAlias properties['key.alias']
                keyPassword properties['key.password']
            }
        }
        buildTypes.release.signingConfig signingConfigs.release
    }
    //GLog.d("${project.toString()} sign end...")
}



android.applicationVariants.all {
    variant ->
        variant.outputs.all {
            //在这里修改apk文件名，引号内的字符串都可以随便定义
            outputFileName = "${variant.name}-v${variant.versionName}.apk"
        }
}